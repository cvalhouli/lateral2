<div id="page_layout">

<%- model_class = Property -%>
<br/><br/>
<%#NOTE TO SELF - We did the quick double BR above; replace with a pixel version late%>

<div id="AddressHeader">

<div style="float:left;width:520px;">
<div id="LargerText">
<%= @property.address1.gsub("Avenue", "Ave.").gsub("avenue", "Ave.").gsub("street", "St.").gsub("Street", "St.").gsub("Road", "Rd.").gsub("road", "Rd.").gsub("Circle", "Cir.").gsub("circle", "Cir.").gsub("Court", "Ct.").gsub("court", "Ct.").gsub("Terrace", "Terr.").gsub("terrace", "Terr.").gsub("Drive", "Dr.").gsub("drive", "Dr.")%><%if !@property.address2.blank?%>, <%end%>
<%= @property.address2 %>
</div>
<div id="SmallText">

<%= @property.city %>,
<%= @property.state_abbreviation %>
<%= @property.zipcode %>
<%if !@property.neighborhood.blank? %> | <% @nhood = Neighborhood.find_by_name(@property.neighborhood)  %><% if @nhood != nil%><%=link_to @property.neighborhood, @nhood %><%else%><%=@property.neighborhood %><%end%><%end%>
</div>
<div id="SmallText">
<%=@property.property_type%> <%if @property.property_fields.try(:first).try(:income_restriction) == '1' %> (Income restricted) <%end%> | <%=@property.entry_type%>
<br/>
<b>
<%= @property.property_fields.try(:first).try(:total_rooms) %> rooms | 	
<% if @property.property_fields.try(:first).try(:bedrooms).to_s=="0" %>
Studio
<%else%>
<%= @property.property_fields.try(:first).try(:bedrooms) %> BR 
<%end%>

| 	<%= @property.property_fields.try(:first).try(:full_bath) %> Full BA 

<%if !@property.property_fields.try(:first).try(:half_bath).blank? && !@property.property_fields.try(:first).try(:quarter_bath).blank?%>
| 
<%if @property.property_fields.try(:first).try(:half_bath) && @property.property_fields.try(:first).try(:quarter_bath)%>
 <%= @property.property_fields.try(:first).try(:half_bath).to_i + @property.property_fields.try(:first).try(:quarter_bath).to_i %>
<% elsif @property.property_fields.try(:first).try(:half_bath) && !@property.property_fields.try(:first).try(:quarter_bath)%>
<%= @property.property_fields.try(:first).try(:half_bath).to_i %>
<% elsif !@property.property_fields.try(:first).try(:half_bath) && @property.property_fields.try(:first).try(:quarter_bath)%>
<%= @property.property_fields.try(:first).try(:quarter_bath).to_i %> 
<%end%>
Partial BA
<%end%>

<%if !@property.Asking_Price.blank? && !@property.sqft.blank? %>
 <b>Approx. <%=@property.sqft %>  sq.ft.</b>
 

<%end%>

</b>
</div>

</div>

<div style="float:left;width:400px;">
	<div style="float:left;width:250px;">


<div id="LargerText">
<%=@property.Asking_Price%> <%if @property.entry_type=="Residential for rent" || @property.entry_type=="Commercial for lease" || @property.entry_type=="Cell tower leasing" %>/mo.<%end%>
</div>	

<div style="font-size:13px;float:left;font-weight:none;width:250px">
	<% if @property.sqft.delete('$,').to_f.round(2) != 0.0%>
$<%=(@property.Asking_Price.delete('$,').to_f/@property.sqft.delete('$,').to_f).round(2)%>/sq.ft.</span>
<%end%>
<div style="font-size:13px:float:left;width:250px">
	<% if @property.property_fields.try(:first).try(:flood_zone) %>
	<b>Flood Zone <%=@property.property_fields.try(:first).try(:flood_zone) %> </b>    
 	(<% if @property.property_fields.try(:first).try(:flood_zone) =='A'%>High flood risk<% elsif @property.property_fields.try(:first).try(:flood_zone) =='B'%>Moderate flood risk<% elsif @property.property_fields.try(:first).try(:flood_zone) =='C'%>Minimal flood risk<%end%>)
	<%end%>
	<br/>
	
<%if @property.entry_type == "Residential for rent" %>	
<b>Smoking:</b>  <%= @property.property_fields.try(:first).try(:smoking)%> 
<br/>

<b>Pets:</b> <%= @property.property_fields.try(:first).try(:pets)%> 
<br/>
<b>Laundry:</b> <%= @property.property_fields.try(:first).try(:laundry)%> 
<%else%>
<%if @property.property_fields.try(:first).try(:Annual_real_estate_tax)%>		
<b>Real estate taxes:</b> <%if @property.property_fields.try(:first).try(:Annual_real_estate_tax)%>$<%= number_with_delimiter(@property.property_fields.try(:first).try(:Annual_real_estate_tax).try(:to_i), :delimiter => ',') %>/yr. ($<%= number_with_delimiter(@property.property_fields.try(:first).try(:Annual_real_estate_tax).try(:to_i)/12, :delimiter => ',') %>/mo.)  <%end%>
<%end%>
<br/>
<%if @property.property_fields.try(:first).try(:hoa) %>
<b>Common Charges:</b> <%if @property.property_fields.try(:first).try(:hoa) %> $<%= number_with_delimiter(@property.property_fields.try(:first).try(:hoa).try(:to_i), :delimiter => ',' ) %> <%end%> <%end%>
<%end%>



</div>



</div>
</div>

</div>


</div>

<div style="font-size:10px;margin-top:5px;font-weight:bold;padding-top:20px;padding-bottom:15px;float:right;padding-right:203px;margin-top:-20px">
	
<span style="padding-right:2px"><%=link_to "FAVORITE", :q=>'favorite' %></span> | <span style="padding-left:2px;padding-right:4px"><%=link_to "PRINT"%></span>|<span style="padding-left:4px;padding-right:4px"><%=link_to "SHARE"%></span>|<span style="padding-left:4px;padding-right:4px"><%=link_to "HIDE"%></span>|<span style="padding-left:4px;padding-right:4px"><%=link_to "REPORT AN ISSUE"%></span>
</div>

<%if params[:q]=='favorite' %>

<% current_user.up_votes @property %> 

<%end%>


<div style="float:left;width:1200px">




<div style="float:left;background:#f0f0f0;height:400px;width:470px;">
	
	
	<% if 1==1 %>
	<%@pictures=@property.pictures %>
	
	<div id="myCarousel" class="carousel slide">
		
	      
    <ol class="carousel-indicators">
	
	 <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
	<%counter=1%>
    <%for picture in @pictures%>
    
    <li data-target="#myCarousel" data-slide-to="<%=counter%>"></li>
     <%counter=counter+1%>
    <%end%>

    </ol>
   <%end%>


<%if 1==1 %>
    <!-- Carousel items -->
    <div class="carousel-inner">
	
	
    <div class="active item">
<% end %>
    <%= image_tag @property.photo.url, :class=>'slider' %>

<% if 1==1%>

     </div>

	<%for picture in @pictures%>
    
    <div class="item"><%= image_tag picture.photo.url, :class=>'slider' %></div>
   
    <%end%>


    </div>
    <!-- Carousel nav -->
    <a class="carousel-control left" href="#myCarousel" data-slide="prev">&lsaquo;</a>
    <a class="carousel-control right" href="#myCarousel" data-slide="next">&rsaquo;</a>
    </div>
	
	
	
	
	
	
	<%end %>
	

<br/>
<%#= link_to 'Add Image', new_picture_path(:q=>@property.id) %>
</div>


<div style="width:400px;margin-right:280px;float:right;overflow:hidden">
	
	<div id="map_canvas"></div>
    <div id="map_canvas2"></div>
    <div style="margin-top:10px">
	
<% if @property.property_fields.try(:first).try(:flood_zone)%>
	
<div style="float:left;background-color:#FF0000;width:16px;height:16px;margin-right:10px"></div><div style="float:left"> <b>Flood Zone A </b>  (High flood risk)</div><br/>
<div style="float:left;background-color:#FF5C33;width:16px;height:16px;margin-right:10px"></div> <div style="float:left"><b>Flood Zone B </b>  (Moderate flood risk)</div><br/>
<div style="float:left;background-color:#FFFF00;width:16px;height:16px;margin-right:10px"></div><div style="float:left"><b>Flood Zone C </b>   (Minimal flood risk)</div>



	
<%end%>
	</div>
	
</div>

<div style="float:left;background:#fff;margin-top:20px;padding: 10px 10px 10px 0px; height:380px;width:480px;">
	<b>DESCRIPTION</b><br/>
	<%=@property.description%>
	
	<br/>
	<br/>
	<b>Nearby transit:</b> <%=@property.nearby_transit %> (<%if @property.transit_distance%><%= '%.2f' % @property.transit_distance%><%end%> miles)
	<br/>
	<%if @property.entry_type=="Residential for sale" or @property.entry_type=="Residential for rent"%>
	     <b>Nearest Synagogue:</b> <%=@property.nearest_synagogue %> (<%if @property.synagogue_distance%><%= '%.2f' % @property.synagogue_distance%><%end%> miles)
     <%end%>
<br/>


</div>



<dl class="dl-horizontal">

	<%if 1==2%>

  <dt><strong><%= model_class.human_attribute_name(:sqft) %>:</strong></dt>
  <dd><%= @property.sqft %></dd>
  <dt><strong><%= model_class.human_attribute_name(:marketvalue) 
%>:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:marketvalue) %></dd>
  <dt><strong><%= model_class.human_attribute_name(:mortgageamount) %>:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:mortgageamount) %></dd>
  <dt><strong><%= model_class.human_attribute_name(:mortgageAPR) %>:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:mortgageAPR) %></dd>
  <dt><strong><%= model_class.human_attribute_name(:mortgagetype) %>:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:mortgagetype) %></dd>


<dt><strong><%= model_class.human_attribute_name(:entry_type) %>:</strong></dt>
  <dd><%= @property.entry_type %></dd>
 <dt><strong>Total Rooms:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:total_rooms) %></dd>
<dt><strong>Bedrooms:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:bedrooms) %></dd>

<dt><strong>Full Bath:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:full_bath) %></dd>


<dt><strong>Half Bath:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:half_bath) %></dd>


<dt><strong>Quarter Bath:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:quarter_bath) %></dd>


<dt><strong>Outdoor Space:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:outdoor_space) %></dd>

<dt><strong>Elevator:</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:elevator) %></dd>

<dt><strong>Maintenance fee</strong></dt>
  <dd><%= @property.property_fields.try(:first).try(:maintenance_fee) %></dd>

  
  <dt><strong><%= model_class.human_attribute_name(:description) %>:</strong></dt>
  <dd><%= @property.description %></dd>

<%end%>

</dl>

<div class="form-actions">
  <%= link_to t('.back', :default => t("helpers.links.back")),
              properties_path, :class => 'btn'  %>
  <%= link_to t('.edit', :default => t("helpers.links.edit")),
              edit_property_path(@property), :class => 'btn' %>
  <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
              property_path(@property),
              :method => 'delete',
              :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
              :class => 'btn btn-danger' %>
</div>



<%if 1==1%>
    <script>
function initialize() {

	
	
	
    var infowindow = new google.maps.InfoWindow({size: new google.maps.Size(150,50) });	
	var greyedOut = [ { color: "#CCCCCC" } ]
	var styleArray = [
		{
			featureType: "road.arterial",
			elementType: "geometry",
			stylers: [
				{ hue: "#666666" },
				{ saturation: -100 },
				{ lightness: 0 }
			]
		},{
			featureType: "road.highway",
			elementType: "geometry",
			stylers: [
				{ hue: "#A710DE" },
				{ saturation: -90 },
				{ lightness: 20 }
			]
		},{
			featureType: "water",
			stylers: [
				{ hue: "#3F5375" },
				{ saturation: -50 },
				{ lightness: 0 }
			]
		},{
			featureType: "poi.park",
			stylers: greyedOut
		},{
			featureType: "administrative.land_parcel",
			stylers: greyedOut
		},{
			featureType: "poi.attraction",
			stylers: greyedOut
		}
	];

	var zones = new google.maps.FusionTablesLayer({
		query: {
			select: 'geometry',
			from: '13uEi2dynsKzdVyegQvO7QH59OOOnjxjd3Ry9BEA'
		},
		clickable: 0,
		styles: [{
			polygonOptions: {
				fillColor: "#FF0000",
				fillOpacity: 0.45
			}
		},{
			where:"CAT1NNE = 'B'",
			polygonOptions: {
				fillColor: "#FF5C33"
			}
		},{
			where:"CAT1NNE = 'C'",
			polygonOptions: {
				fillColor: "#FFFF00"
			}
		}]
	});
	var neighborhoods = new google.maps.FusionTablesLayer({
		query: {
			select: 'geometry',
			from: '1RLWudXuCLqpLmneVki-pdH9GJJOE1qc8ZMQlb0s'
		},
		clickable: 0,
		styles: [{
			polygonOptions: {
				fillColor: "#FFF",
				fillOpacity: 0.45
			}
		}]
	});



  var myLatlng = new google.maps.LatLng(<%=@property.latitude%>,<%=@property.longitude%>);
  var mapOptions = {
    zoom: 12,
    center: myLatlng,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  }

 var mapOptions2 = {
    zoom: 16,
    center: myLatlng,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  }

  var map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
  var map2 = new google.maps.Map(document.getElementById('map_canvas2'), mapOptions2);

  var marker = new google.maps.Marker({
      position: myLatlng,
      map: map,
      title: 'Hello World!'
  });

	
 var marker2 = new google.maps.Marker({
      position: myLatlng,
      map: map2,
      title: 'Hello World!'
  });

	zones.setMap(map2);
	
	neighborhoods.setMap(map);
	

	
	
	
	  google.maps.event.addListener(zones, "click", function(e) {
	    var content = "<b>"+e.row['name'].value+"</b><br><br>"+e.latLng.toUrlValue(6);
	    infowindow.setContent(content);
	    infowindow.setPosition(e.latLng);
	    infowindow.open(map2);
	  });

	
	function showAddress(address) {
	    var contentString = address+"<br>Outside Area";
	   
		  var point = myLatlng;
	          contentString += "<br>"+myLatlng;
	          map2.setCenter(myLatlng);
	          // query FT for data
	          var queryText ="SELECT 'CAT1NNE', 'geometry'  FROM "+FusionTableID+" WHERE ST_INTERSECTS(\'geometry\', CIRCLE(LATLNG(" + myLatlng.toUrlValue(6) + "),0.5));";
	          // document.getElementById('FTQuery').innerHTML = queryText;
	          queryText = encodeURIComponent(queryText);
	          var query = new google.visualization.Query('http://www.google.com/fusiontables/gvizdata?tq='  + queryText);



	          //set the callback function
	          query.send(openInfoWindowOnMarker);
	 
	}

	function openInfoWindowOnMarker(response) {
	if (!response) {
	  alert('no response');
	  return;
	}
	if (response.isError()) {
	  alert('Error in query: ' + response.getMessage() + ' ' + response.getDetailedMessage());
	  return;
	} 
	  FTresponse = response;
	  //for more information on the response object, see the documentation
	  //http://code.google.com/apis/visualization/documentation/reference.html#QueryResponse
	  numRows = response.getDataTable().getNumberOfRows();
	  numCols = response.getDataTable().getNumberOfColumns();
	  var content = "<b>Outside area</b><br><br>";    
	  var unionBounds = null;
	//  alert(numRows);
	  for (var i=0; i < numRows; i++) {
	     var name = FTresponse.getDataTable().getValue(i,0);
	     var kml =  FTresponse.getDataTable().getValue(i,1);
	     // create a geoXml3 parser for the click handlers
	     content = "<b>"+response.getDataTable().getValue(i,0)+"</b><br><br>";



	     alert("Flood Zone"+response.getDataTable().getValue(i,0));

	/*
	     var geoXml = new geoXML3.parser({
	                    map: map,
			    zoom: false
	                });
	//   alert(kml);
	     geoXml.parseKmlString("<Placemark>"+kml+"<\/Placemark>");
	     geoXml.docs[0].gpolygons[0].setMap(null);
	     if (!unionBounds) unionBounds = geoXml.docs[0].gpolygons[0].bounds;
	     else unionBounds.union(geoXml.docs[0].gpolygons[0].bounds);
	*/
	   }
	  infowindow.setContent(content+marker2.getPosition().toUrlValue(6));
	  // zoom to the bounds
	  // map.fitBounds(unionBounds);
	  google.maps.event.addListener(marker2, 'click', function() {
	    infowindow.open(map2,marker2);
	  });
	  google.maps.event.trigger(marker2, 'click');
	}
	showAddress(); 
	
	
	
	
}












google.maps.event.addDomListener(window, 'load', initialize);

    </script>









<%end%>
